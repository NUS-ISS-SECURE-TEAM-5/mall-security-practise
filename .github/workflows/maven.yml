name: Build and Push Docker Images to GCP Artifact Registry

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build_docker_images:
    runs-on: ubuntu-latest
    services:
      docker:
        image: docker:stable-dind
        options: --privileged
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install socat and Maven
        run: |
          sudo apt-get update
          sudo apt-get install -y socat maven

      - name: Forward TCP 2375 to Docker's Unix socket
        run: |
          socat TCP-LISTEN:2375,fork UNIX-CONNECT:/var/run/docker.sock &

      - name: Set up Docker Host
        run: |
          echo "DOCKER_HOST=tcp://localhost:2375" >> $GITHUB_ENV

      - name: Wait for Docker to start
        run: |
          for i in {1..30}; do
            if docker -H tcp://localhost:2375 info > /dev/null 2>&1; then
              echo "Docker is ready!"
              break
            else
              echo "Waiting for Docker to start... Attempt $i"
              sleep 5
            fi
          done

      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Configure Docker for GCP Artifact Registry
        run: gcloud auth configure-docker asia-southeast1-docker.pkg.dev

      - name: Build Docker Images with Maven
        run: |
          mvn clean package -DskipTests  # Maven 自动构建 Docker 镜像

      - name: List Docker Images (After Maven Build)
        run: docker -H tcp://localhost:2375 images

      - name: Retag and Push All Docker Images
        run: |
          # 获取所有 mall/ 前缀的 Docker 镜像
          IMAGES=$(docker -H tcp://localhost:2375 images --format "{{.Repository}}:{{.Tag}}" | grep "^mall/")
          
          for IMAGE in $IMAGES; do
            IMAGE_NAME=$(echo $IMAGE | cut -d':' -f1)  # 获取 mall/mall-admin 这样的名称
            TAG=$(echo $IMAGE | cut -d':' -f2)  # 获取 tag，通常是 latest
            
            # 生成 GCP Artifact Registry 目标路径
            GCP_IMAGE="asia-southeast1-docker.pkg.dev/mall-security/mall/$IMAGE_NAME:$TAG"
            
            echo "Retagging $IMAGE as $GCP_IMAGE ..."
            docker -H tcp://localhost:2375 tag $IMAGE $GCP_IMAGE
            
            echo "Pushing $GCP_IMAGE ..."
            docker -H tcp://localhost:2375 push $GCP_IMAGE
          done
